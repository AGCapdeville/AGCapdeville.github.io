{"version":3,"sources":["NotFound.js","Portfolio.js","Blog.js","Footer.js","Home.js","NavigationBar.js","App.js","serviceWorker.js","index.js"],"names":["NotFound","class","React","Component","Portfolio","className","bg-dark","style","float","paddingTop","Blog","Footer","href","Home","src","NavigationBar","to","activeClassName","target","rel","path","exact","component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kSAYeA,E,iLARP,OACA,6BACI,wBAAIC,MAAM,aAAV,Y,GAJWC,IAAMC,WCgBdC,E,iLAbT,OACE,yBAAKC,UAAU,YACX,4BAAQA,UAAU,+BACd,yBAAKC,WAAA,EAAQC,MAAO,CAACC,MAAQ,SAAUC,WAAa,SAChD,gD,GANIP,IAAMC,WCefO,E,iLAbT,OACE,yBAAKL,UAAU,YACX,4BAAQA,UAAU,iCACd,yBAAKC,WAAA,EAAQC,MAAO,CAACC,MAAQ,SAAUC,WAAa,SAChD,2C,GANDP,IAAMC,WCsBVQ,MAtBf,WACE,OACE,4BAAQN,UAAU,cAChB,sDAEI,uBACEA,UAAU,WACVO,KAAK,+CACL,0CALN,KAOI,uBACEP,UAAU,WACVO,KAAK,oCAEL,0CCcGC,E,iLAzBP,OACI,0BAAMZ,MAAM,uBACR,4BAAQA,MAAM,YACV,yBAAKA,MAAM,WACP,yBAAKa,IAAI,kCAAkCb,MAAM,oBAErD,8CAKA,yBAAKI,UAAU,iBACX,uM,GAdLH,IAAMC,W,gBCmEVY,E,iLArDX,OACE,kBAAC,IAAD,KACE,6BACE,6BACE,wBAAId,MAAM,wBACR,4BACE,kBAAC,IAAD,CACEe,GAAG,QACHC,gBAAgB,YAFlB,UAMF,4BACE,kBAAC,IAAD,CACED,GAAG,aACHC,gBAAgB,YAFlB,eAMF,4BACE,kBAAC,IAAD,CACED,GAAG,QACHC,gBAAgB,YAFlB,UAMF,4BACE,uBACAZ,UAAU,oBACVO,KAAK,yDACLM,OAAO,SACPC,IAAI,uBAEA,qCANJ,kBAYN,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQC,MAAI,EAACC,MAAM,KAAnB,IAAwB,kBAAC,EAAD,MAAxB,KACA,kBAAC,IAAD,CAAQD,KAAK,SAAb,IAAsB,kBAAC,EAAD,MAAtB,KACA,kBAAC,IAAD,CAAQA,KAAK,cAAb,IAA2B,kBAAC,EAAD,MAA3B,KACA,kBAAC,IAAD,CAAQA,KAAK,SAAb,IAAsB,kBAAC,EAAD,MAAtB,KACA,kBAAC,IAAD,CAAQE,UAAWtB,W,GA9CHE,IAAMC,WCAnBoB,MATf,WACE,OACE,8BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,QCCcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDyH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.785618e5.chunk.js","sourcesContent":["import React from 'react'\n\nclass NotFound extends React.Component{\n    render () {\n        return (\n        <div>\n            <h1 class=\"jumbotron\">404</h1>\n        </div>\n        )\n    }\n}  \n\nexport default NotFound","import React from 'react';\nimport './App.css';\n\nclass Portfolio extends React.Component {\n    render () {\n      return( \n        <div className=\"App-body\">\n            <header className=\"App-body Section_color_grey\" >\n                <div bg-dark style={{float : 'center', paddingTop : '20px'}}>\n                    <h1>Portfolio</h1>\n                </div>\n            </header>\n        </div>\n        )\n        \n    }\n}\n\nexport default Portfolio","import React from 'react';\nimport './App.css';\n\nclass Blog extends React.Component {\n    render () {\n      return( \n        <div className=\"App-body\">\n            <header className=\"App-header Section_color_grey\" >\n                <div bg-dark style={{float : 'center', paddingTop : '20px'}}>\n                    <h1>Blog</h1>\n                </div>\n            </header>\n        </div>\n        )\n        \n    }\n}\n\nexport default Blog","import React from 'react';\nimport './App.css';\n\nfunction Footer() {\n  return (    \n    <footer className=\"App-footer\"> \n      <div>  \n        Adam Capdeville 2019 | \n          <a\n            className=\"App-link\"\n            href=\"https://www.linkedin.com/in/adamcapdeville/\"> \n            <b> Linkedin </b>\n          </a> |\n          <a \n            className=\"App-link\"\n            href=\"https://github.com/AGCapdeville/\"\n          >\n            <b> GitHub</b>\n          </a>\n        </div>  \n    </footer>\n  );\n}\n\n\nexport default Footer;\n","import React from \"react\";\nimport './App.css';\nimport Footer from './Footer.js';\n\nclass Home extends React.Component {\n    render() {\n        return(\n            <body class='Text_color_offwhite'>\n                <header class='App-body'>\n                    <div class='App-img'>\n                        <img src=\"https://i.imgur.com/eDmARH5.jpg\" class=\"rounded-circle\"/>\n                    </div>\n                    <p>\n                         \n                        Adam Capdeville\n                    </p> \n\n                    <div className='App-container'>\n                        <p>\n                            Currently I am a computer science student at CSUCI \n                            who has a passion for intelligent code, whether it's \n                            intelligently written or written to exhibit intelligence. \n                        </p>\n                    </div>\n                </header>\n\n            </body>\n        )\n    }\n}\n\nexport default Home\n\n\n","import React from 'react';\nimport NotFound from './NotFound';\nimport Portfolio from './Portfolio.js';\nimport Blog from './Blog';\nimport Home from './Home';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  NavLink,\n  useRouteMatch,\n  useParams\n} from \"react-router-dom\";\n\nclass NavigationBar extends React.Component{\n  render () {  \n    return (\n      <Router>\n        <div>\n          <nav>\n            <ul class=\"nav-ul navbar-custom\">\n              <li>\n                <NavLink\n                  to=\"/Home\"\n                  activeClassName=\"selected\"\n                > Home \n                </NavLink>             \n              </li>\n              <li>\n                <NavLink\n                  to=\"/Portfolio\"\n                  activeClassName=\"selected\"\n                > Portfolio \n                </NavLink> \n              </li >\n              <li>\n                <NavLink\n                  to=\"/Blog\"\n                  activeClassName=\"selected\"\n                > Blog \n                </NavLink>               \n              </li>\n              <li>\n                <a\n                className=\"App-link App-left\"\n                href=\"https://github.com/AGCapdeville/AGCapdeville.github.io\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                >\n                    <b>GitHub</b> Pages Repo\n                </a>\n              </li>\n            </ul>\n          </nav>\n            \n          <Switch>\n            <Router path exact=\"/\"> <Home /> </Router>\n            <Router path=\"/Home\"> <Home /> </Router>\n            <Router path=\"/Portfolio\"> <Portfolio /> </Router>\n            <Router path=\"/Blog\"> <Blog /> </Router>\n            <Router component={NotFound}/> \n          </Switch>\n\n          </div>\n        </Router> \n      )\n  }\n}\n\nexport default NavigationBar;","import React from 'react';\n\nimport './App.css';\nimport NavigationBar from './NavigationBar.js';\nimport Footer from './Footer';\n\n\nfunction App() {\n  return (\n    <body>\n      <NavigationBar />\n      <Footer />\n    </body>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport NavigationBar from './NavigationBar';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}