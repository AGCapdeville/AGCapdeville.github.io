{"version":3,"sources":["data/data.js","components/space/space.jsx","components/footer/footer.jsx","ducks/nav.js","components/currentRepo/currentRepo.jsx","components/github/github.jsx","components/screens/landing/landing.jsx","data/blogs.js","ducks/blog.js","components/screens/blogs/blogs.jsx","components/screens/blog/blog.jsx","App.js","ducks/index.js","index.js","configurestore.js","components/github/github.module.scss","components/screens/blogs/blogs.module.scss","components/currentRepo/currentRepo.module.scss","components/screens/landing/landing.module.scss","components/footer/footer.module.scss","components/screens/landing/systemSection.module.scss","daruma.png","components/screens/blog/blog.module.scss"],"names":["user","darumaQuote","mySystemText","Space","id","year","Date","getFullYear","Footer","className","container","link","href","target","setActiveNav","createAction","handleActions","state","action","payload","createSelector","nav","CurrentRepo","url","useState","data","setData","isLoading","setIsLoading","isError","setIsError","useEffect","a","axios","method","then","res","console","log","catch","err","fetchData","useGithubApi","current","obj","numRepos","Object","keys","length","curRepo","curDate","indexDate","i","iNewestRepo","d","parse","day","getDate","monthName","getMonth","updated","style","repoRow","repoLink","name","dateText","reposContainer","map","repo","index","description","key","html_url","repoCard","repoTitle","repoImage","language","languageIconContainer","languageIcon","languageIconDefault","repoText","FadeInSection","props","React","isVisible","setVisible","domRef","useRef","IntersectionObserver","entries","forEach","entry","isIntersecting","observe","ref","children","scrollToRef","window","scrollTo","top","offsetTop","behavior","Landing","dispatch","useDispatch","darumaText","setDarumaText","darumaWhyText","setWhyText","darumaWhatText","setWhatText","toggleDarumaText","text","homeRef","aboutRef","workRef","systemRef","contactRef","body","landingTitle","color","continueButton","onClick","Navbar","sticky","collapseOnSelect","bsPrefix","expand","variant","navbar","Brand","navLink","Toggle","aria-controls","navbarToggle","Collapse","navbarColapse","Nav","Link","eventKey","as","to","screenContainer","aboutSection","profileImage","src","alt","centerText","workSection","sectionTitle","systemStyle","systemSection","line","daruma_container","darumaImg","daruma","daruma_shadow_container","daruma_shadow","daruma_shadow_m","darumaToggleInfoOuterContainer","darumaToggleButtonsContainer","aria-expanded","darumaToggleButton","opacity","darumaToggleInfoContainer","Fade","in","darumaToggleInfo","leftQuote","darumaQuoteText","rightQuote","darumaQuoteEnd","contactSection","Row","contactIconContainer","contactIcon","backgroundColor","location","icon","blogs","title","abstract","heroImage","subtitle","date","simg","img","vid","setBlog","initialBlogState","selectBlog","blog","Blogs","topOfScreenRef","blogScreenTitle","dotSlash","heroImageContainer","blogList","blogLink","Card","blogCard","Body","Title","blogCardTitle","Text","Subtitle","blogCardDate","Blog","useSelector","tryItContainer","blogContainer","abstractContainer","abstractText","e","entryText","entryImageContainer","entryImage","entrySmallImageContainer","entrySmallImage","entryVideoContainer","entryVideo","controls","type","App","path","exact","component","Home","combineReducers","rootElement","document","getElementById","store","preloadedState","middlewares","thunkMiddleware","enhancers","applyMiddleware","composedEnhancers","composeWithDevTools","createStore","rootReducer","configureStore","ReactDOM","render","module","exports"],"mappings":"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","file":"static/js/main.4903b85a.chunk.js","sourcesContent":["\nexport const user = 'AGCapdeville'\n\nexport const descrip = \" I'm a student, hacker, board game geek, cosplay weaver, and artist. Every day I strive to learn, develop and solve tough and interesting problems. I have over 4 years of programing experience, with a multitude of languages. \"\nexport const languages = ['JavaScript','HTML','CSS','Python','Java','C / C++','C#'];\nexport const frameworks = ['React','React-Native','Bootstrap'];\nexport const databases = ['MySQL','MongoDB'];\n\nexport const darumaQuote = [\"SEVEN TIMES DOWN,\", \"EIGHT TIMES UP.\", \"- Japanese Proverb\"];\n\nexport const mySystemText = [\n    'Be Goal Oriented.',\n    'Fail Quickly, And Get Back Up.',\n    'Be Reslient, And Determined.',\n    'Complete, And Repeat.'\n];\n\nexport const darumaInfo = \"A Daruma doll (達磨, daruma) is a hollow, round, Japanese traditional doll modeled after Bodhidharma, the founder of the Zen tradition of Buddhism. ... Daruma dolls are seen as a symbol of perseverance and good luck, making them a popular gift of encouragement.\";\nexport const darumaWhy = \"Because it embodies my system of work. The Daruma doll, to me, represents setting goals and seeing them through to the end; staying focused and determined to finish any project I set my self on.\";\n","import React from \"react\";\n\nimport './space.scss'\n\n\nconst Space = () => {\n\n  return(\n    <div id='starsContainer'> \n      <div id='starsS'/>\n      <div id='starsM'/>\n      <div id='starsL'/> \n    </div>\n  )\n\n}\n\nexport default Space;\n","import React from \"react\";\nimport { container, link } from \"./footer.module.scss\";\nimport { MdCopyright } from 'react-icons/md';\n\n\nconst year = new Date().getFullYear();\nconst preserve = 'Adam Capdeville ';\n\nconst Footer = () => {\n  return (\n    <div className={container}>\n      {preserve}<MdCopyright /> {` ${year}`}\n      {' | '}\n      <a\n        className={link}\n        href=\"https://www.https://github.com/AGCapdeville/AGCapdeville.github.io\" target=\"_blank\" >\n        Source\n      </a>\n    </div>\n  );\n};\n\nexport default Footer;\n","import { createAction, handleActions } from \"redux-actions\";\nimport { useSelector } from \"react-redux\";\nimport { createSelector } from \"reselect\";\n\n\nexport const setActiveNav = createAction('nav/SET_ACTIVE_NAV');\n\nconst initialNavState = 'Home';\n\nexport default handleActions({\n    [setActiveNav]: (state, action) => state = action.payload,\n}, initialNavState);\n\nconst selectNav = createSelector(\n    state => state.nav,\n    nav => nav   \n)\n\nexport const useNav = () => useSelector(selectNav);\n\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport style from './currentRepo.module.scss';\nimport { user } from '../../data/data'\nimport { func } from 'prop-types';\n\nconst useGithubApi = url => {\n  const [data, setData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsError(false);\n      setIsLoading(true);\n      axios(\n        {\n          method: \"get\",\n          url: url,\n        }\n      )\n        .then(res => {\n          console.log(\" Response: \\n\", res);\n          setData(res.data);\n          setIsLoading(false);\n        })\n        .catch(err => {\n          setIsError(true);\n        });\n    };\n    fetchData();\n  }, [url]);\n\n  return [{ data, isLoading, isError }];\n}\n\nfunction iNewestRepo(obj) {\n  var numRepos = Object.keys(obj).length;\n  var curRepo = 0;\n  var curDate = new Date(obj[curRepo][\"updated_at\"]);\n  var indexDate = new Date(obj[0][\"updated_at\"]);\n  var i = 0;\n  for (i = 0; i < numRepos; i++) {\n    indexDate = new Date(obj[i][\"updated_at\"]);\n    if (indexDate > curDate) {\n      curDate = indexDate;\n      curRepo = i;\n    }\n  }\n  return (curRepo);\n}\n\nfunction getMonthName(monthNumber) {\n  var month = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n  return (month[monthNumber]);\n}\n\nconst CurrentRepo = () => {\n  var url = `https://api.github.com/users/${user}/repos`;\n  const [{ data, isLoading }] = useGithubApi(url);\n\n  if (isLoading) {\n    return (\"loading...\");\n  } else {\n    var current = iNewestRepo(data);\n    var link = `https://github.com/${user}/${data[current][\"name\"]}`;\n\n    const d = new Date(Date.parse(data[current][\"updated_at\"]));\n    const day = d.getDate();\n    const monthName = getMonthName(d.getMonth());\n    const year = d.getFullYear();\n\n    const updated = `${monthName}, ${day}, ${year}`;\n\n    return (\n      <div className={style.container}>\n       \n        <div className={style.repoRow}>\n          Most Recent Commit:\n          <a href={link} className={style.repoLink} target=\"_blank\">\n            [{data[current].name}]\n          </a>            \n          <div className={style.dateText}> [{updated}] </div>\n        </div>\n\n        <div>\n          GitHub Repo Total:\n          [<a className={style.repoLink} href={'https://github.com/AGCapdeville?tab=repositories'} target=\"_blank\"> \n            {data.length} \n          </a>]\n        </div>\n\n      </div>\n    )\n  }\n};\n\nexport default CurrentRepo;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { user } from \"../../data/data\";\nimport { Col } from \"react-bootstrap\";\nimport { DiJavascript1 } from \"react-icons/di\";\nimport { DiJava, DiPython } from \"react-icons/di\";\n\nimport style from \"./github.module.scss\";\n\nconst useGithubApi = (url) => {\n  const [data, setData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsError(false);\n      setIsLoading(true);\n      axios({\n        method: \"get\",\n        url: url,\n      })\n        .then((res) => {\n          console.log(\" Response: \\n\", res);\n          setData(res.data);\n          setIsLoading(false);\n        })\n        .catch((err) => {\n          setIsError(true);\n        });\n    };\n    fetchData();\n  }, [url]);\n\n  return [{ data, isLoading, isError }];\n};\n\nfunction iNewestRepo(obj) {\n  var numRepos = Object.keys(obj).length;\n  var curRepo = 0;\n  var curDate = new Date(obj[curRepo][\"updated_at\"]);\n  var indexDate = new Date(obj[0][\"updated_at\"]);\n  var i = 0;\n  for (i = 0; i < numRepos; i++) {\n    indexDate = new Date(obj[i][\"updated_at\"]);\n    if (indexDate > curDate) {\n      curDate = indexDate;\n      curRepo = i;\n    }\n  }\n  return curRepo;\n}\n\nfunction getMonthName(monthNumber) {\n  var month = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ];\n  return month[monthNumber];\n}\n\nexport default () => {\n  var url = `https://api.github.com/users/${user}/starred`;\n  const [{ data, isLoading }] = useGithubApi(url);\n\n  if (isLoading) {\n    return \"loading...\";\n  } else {\n    var current = iNewestRepo(data);\n    var link = `https://github.com/${user}/${data[current][\"name\"]}`;\n\n    // const d = new Date(Date.parse(data[current][\"updated_at\"]));\n    // const day = d.getDate();\n    // const monthName = getMonthName(d.getMonth());\n    // const year = d.getFullYear();\n\n    // const updated = `${monthName}, ${day}, ${year}`;\n\n    // console.log('github obj:',current)\n\n    const languageIcon = (language) => {\n      switch (language) {\n        case \"JavaScript\":\n          return (\n            <div className={style.languageIconContainer}>\n              <DiJavascript1 className={style.languageIcon} />\n            </div>\n          );\n        case \"Python\":\n          return (\n            <div className={style.languageIconContainer}>\n              <DiPython className={style.languageIcon} />\n            </div>\n          );\n        case \"Java\":\n          return (\n            <div className={style.languageIconContainer}>\n              <DiJava className={style.languageIcon} />\n            </div>\n          );\n\n        default:\n          return (\n            <div className={style.languageIconContainer}>\n              <div className={style.languageIconDefault}> {language} </div>\n            </div>\n          );\n      }\n    };\n\n    return (\n      <div className={style.reposContainer}>\n        {data.map((repo, index) => {\n          if (repo.description != null) {\n            return (\n              <a className={style.repoLink} key={index} href={repo.html_url} target=\"_blank\">\n                <div className={style.repoCard}>\n                  <div className={style.repoTitle}>{repo.name}</div>\n                  <div className={style.repoImage}>\n                    {languageIcon(repo.language)}\n                  </div>\n                  <div className={style.repoText}>{repo.description}</div>\n                </div>\n              </a>\n            );\n          }\n        })}\n      </div>\n    );\n\n    //   <div className={container}>\n    //     <div className={text} > CURRENTLY WORKING ON: </div>\n    //     <div className={repoRow}>\n    //       {/* <div className={blinkyGreen} /> */}\n    //       [<a href={link} target=\"_blank\"> {data[current][\"name\"]} </a>]\n    //     </div>\n    //     <div className={dateRow}>\n    //       Updated: [<div className={dateText}> {updated} </div>]\n    //     </div>\n    //   </div>\n    // )\n  }\n};\n","import React, { useState, useRef, useEffect } from 'react'\nimport { descrip, languages, frameworks, databases, mySystemText, darumaInfo, darumaWhy, darumaQuote } from '../../../data/data'\nimport { useDispatch } from 'react-redux'\nimport ScrollTrigger from 'react-scroll-trigger'\nimport { GoQuote } from 'react-icons/go'\nimport { FiMail } from 'react-icons/fi'\nimport { TiSocialFacebook, TiSocialLinkedin, TiSocialGithub } from 'react-icons/ti'\nimport darumaImg from '../../../daruma.png'\n\nimport {\n  Navbar,\n  Nav,\n  Row,\n  Fade,\n} from 'react-bootstrap'\n\nimport { Link } from 'react-router-dom';\n\n\nimport style from './landing.module.scss'\nimport systemStyle from './systemSection.module.scss';\n\nimport './fadeIn.css'\n\nimport Space from '../../space';\nimport Footer from '../../footer';\n\nimport { setActiveNav } from '../../../ducks/nav';\nimport { white, green } from \"color-name\";\n\nimport CurrentRepo from '../../currentRepo/currentRepo.jsx';\n\nimport GitHub from '../../github'\n// import { blogs } from '../../../data/blogs'\n\n\nconst Language = (language) => <li>{language}</li>;\nconst Framework = (framework) => <li>{framework}</li>;\nconst Database = (database) => <li>{database}</li>;\n\n\nfunction FadeInSection(props) {\n  const [isVisible, setVisible] = React.useState(false);\n  const domRef = React.useRef();\n  React.useEffect(() => {\n    const observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => setVisible(entry.isIntersecting));\n    });\n    observer.observe(domRef.current);\n  }, []);\n  return (\n    <div\n      className={`fade-in-section ${isVisible ? 'is-visible' : ''}`}\n      ref={domRef}\n    >\n      {props.children}\n    </div>\n  );\n}\n\nconst scrollToRef = (ref) => {\n  window.scrollTo({\n    top: ref.current.offsetTop,\n    behavior: 'smooth'\n  })\n}\n\nconst Landing = () => {\n\n\n  const dispatch = useDispatch();\n\n  const [darumaText, setDarumaText] = useState(true);\n  const [darumaWhyText, setWhyText] = useState(false);\n  const [darumaWhatText, setWhatText] = useState(false);\n\n  const toggleDarumaText = (text) => {\n    switch (text) {\n      case 'daruma':\n        setDarumaText(true);\n        setWhyText(false);\n        setWhatText(false);\n        break;\n\n      case 'why':\n        setDarumaText(false);\n        setWhyText(true);\n        setWhatText(false);\n        break;\n\n      case 'what':\n        setDarumaText(false);\n        setWhyText(false);\n        setWhatText(true);\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  const homeRef = useRef(null)\n  const aboutRef = useRef(null)\n  const workRef = useRef(null)\n  const systemRef = useRef(null)\n  const influentialRef = useRef(null)\n  const contactRef = useRef(null)\n\n  return (\n    \n    <div className={style.body}>\n\n      <div>\n        <div ref={homeRef} className={style.landingTitle}>\n          <div>Hello, I'm <strong style={{ color: 'coral' }}>Adam Capdeville</strong>.</div>\n          <div>I'm a full-stack software engineer.</div>\n          <br />\n          <button className={style.continueButton} onClick={() => {\n            scrollToRef(aboutRef)\n          }} >\n            continue\n          </button>\n        </div>\n\n        <Space />\n      </div>\n\n      <Navbar sticky=\"top\" collapseOnSelect bsPrefix='navbar' expand=\"md\" variant=\"dark\" className={style.navbar}>\n        <Navbar.Brand className={style.navLink}>Adam Capdeville</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" className={style.navbarToggle} />\n        <Navbar.Collapse id=\"responsive-navbar-nav\" className={style.navbarColapse}>\n          <Nav.Link eventKey=\"1\" className={style.navLink} onClick={() => scrollToRef(homeRef)}>Home</Nav.Link>\n          <Nav.Link eventKey=\"2\" className={style.navLink} onClick={() => scrollToRef(aboutRef)}>About</Nav.Link>\n          <Nav.Link eventKey=\"3\" className={style.navLink} onClick={() => scrollToRef(workRef)}>Work</Nav.Link>\n          <Nav.Link eventKey=\"4\" className={style.navLink} onClick={() => scrollToRef(systemRef)}>System</Nav.Link>\n          <Nav.Link eventKey=\"5\" className={style.navLink} onClick={() => scrollToRef(contactRef)}>Contact</Nav.Link>\n          <Nav.Link as={Link} to=\"/blogs\" eventKey=\"6\" className={style.navLink} onClick={() => { scrollToRef(homeRef); dispatch(setActiveNav('Blogs')) }}>Dev Blog</Nav.Link>\n        </Navbar.Collapse>\n      </Navbar> \n\n      <div className={style.screenContainer}>\n\n        <section ref={aboutRef} id='About' className={style.aboutSection}>\n          {/* <strong className={style.sectionTitle}></strong> */}\n          <div className={style.profileImage}>\n            <img\n              src=\"https://i.imgur.com/NYjsR8e.jpg\"\n              alt=\"profile img\"\n            />\n          </div>\n\n          <div className={style.centerText}>\n            <p>{descrip}</p>\n          </div>\n\n        </section>\n\n        <section ref={workRef} id='Work' className={style.workSection}>\n          <br />\n          <strong className={style.sectionTitle}>Work</strong>\n          <br />\n          <CurrentRepo />\n          <br />\n          <GitHub />\n          <br />\n\n        </section>\n\n        <section ref={systemRef} id='System' className={systemStyle.systemSection}>\n          <strong className={style.sectionTitle}>My System</strong>\n          <br />\n\n          {mySystemText.map(line => (\n            <div className={'box'}>\n              <FadeInSection key={line}>\n                <strong className={systemStyle.mySystemText}>{line}</strong>\n              </FadeInSection>\n            </div>\n          ))}\n\n\n          <div className={systemStyle.daruma_container}>\n            <img src={darumaImg} className={systemStyle.daruma} />\n            <div className={systemStyle.daruma_shadow_container} >\n              <div className={systemStyle.daruma_shadow} />\n              <div className={systemStyle.daruma_shadow_m} />\n            </div>\n          </div>\n\n          <div className={systemStyle.darumaToggleInfoOuterContainer}>\n\n            <div className={systemStyle.darumaToggleButtonsContainer}>\n              <button\n                  onClick={() => toggleDarumaText('daruma')}\n                  aria-controls=\"darumaText\"\n                  aria-expanded={darumaText}\n                  className={systemStyle.darumaToggleButton}\n                  opacity={darumaText}\n                >\n                  Daruma Proverb.\n              </button>\n                \n              <button\n                onClick={() => toggleDarumaText('what')}\n                aria-controls=\"darumaWhatText\"\n                aria-expanded={darumaWhatText}\n                className={systemStyle.darumaToggleButton}\n              >\n                What Is Daruma?\n              </button>\n\n              <button\n                onClick={() => toggleDarumaText('why')}\n                aria-controls=\"darumaWhyText\"\n                aria-expanded={darumaWhyText}\n                className={systemStyle.darumaToggleButton}\n              >\n                Why Daruma?\n              </button>\n            </div>\n            \n            <div className={systemStyle.darumaToggleInfoContainer}>\n              <Fade in={darumaWhatText}>\n                <div id='darumaWhatText' className={systemStyle.darumaToggleInfo}>\n                  <strong>What Is A Daruma doll?</strong>\n                  <p>{darumaInfo}</p>\n                </div>\n              </Fade>\n              <Fade in={darumaText}>\n                <div id=\"darumaText\" className={systemStyle.darumaToggleInfo}>\n                  <div>\n                    <div className={systemStyle.darumaQuote}>\n                      <div className={systemStyle.leftQuote}>\n                        <GoQuote />\n                      </div>\n                      <div className={systemStyle.darumaQuoteText}>\n                        <div>{darumaQuote[0]}</div>\n                        <div>{darumaQuote[1]}</div>\n                      </div>\n                      <div className={systemStyle.rightQuote}>\n                        <GoQuote />\n                      </div>\n                    </div>\n                    <div className={systemStyle.darumaQuoteEnd}>\n                      <strong className={systemStyle.darumaQuoteEnd}>{darumaQuote[3]}</strong>\n                    </div>\n                  </div>\n                </div>\n              </Fade>\n              <Fade in={darumaWhyText}>\n                <div id='darumaWhyText' className={systemStyle.darumaToggleInfo}>\n                  <strong>Why The Daruma doll?</strong>\n                  <p>{darumaWhy}</p>\n                </div>\n              </Fade>\n            </div>\n          </div>\n\n        </section>\n\n        {/* <section ref={influentialRef} id='Influential' className={style.influentialSection}>\n          <strong className={style.sectionTitle}>Influential</strong>\n        </section> */}\n\n        <section ref={contactRef} id='Contact' className={style.contactSection}>\n          <div className={style.sectionTitle}>Lets connect,</div>\n          <Row className={style.contactIconContainer}>\n            <div\n              className={style.contactIcon} style={{backgroundColor:'#08a0e9'}}\n              onClick={() => window.location.href = \"mailto:agcapdeville@gmail.com\"} target=\"_blank\" >\n              <FiMail className={style.icon} />\n            </div>\n            <a\n              className={style.contactIcon} style={{backgroundColor:'dodgerblue'}}\n              href=\"https://www.facebook.com/adam.capdeville.90\" target=\"_blank\" >\n              <TiSocialFacebook className={style.icon} />\n            </a>\n            <a\n              className={style.contactIcon} style={{backgroundColor:'#0E76AE'}}\n              href=\"https://www.linkedin.com/in/adamcapdeville/\" target=\"_blank\" >\n              <TiSocialLinkedin className={style.icon} />\n            </a>\n            <a\n              className={style.contactIcon} style={{backgroundColor:'purple'}}\n              href=\"https://github.com/AGCapdeville\" target=\"_blank\" >\n              <TiSocialGithub className={style.icon} />\n            </a>\n          </Row>\n        </section>\n\n      </div>\n      <Footer />\n\n\n    </div>\n  )\n}\nexport default Landing;\n","export const blogs = [\n    {\n        title:'Capstone Dev Blog',\n        abstract:'Slay The Tower is a dynamic deck building video game developed in React / Redux to create a sleek and unique user experience. Players start the game by selecting a hero’s weapon (deck) to begin their arduous climb. As the hero progresses, they must balance risk and reward. Defeating enemies grants gold and cards, but choosing to fight dire foes has the possibility to grant even greater treasures. Players must choose cards wisely, as the core of the game is deck building emphasizing on card synergy. With every attempt on the Tower, the player will learn of different strategies and outcomes. My project aims to develop a complex game, all while learning through implementation.',\n        heroImage: \"https://i.imgur.com/kPXC7j9.jpg\",\n        link: 'https://agcapdeville.github.io/SlayTheTower/',\n        entry:[\n            {\n                title: 'Setup Dev Blog & Narrowing Of Project Scope',\n                subtitle: 'Sprint 0',\n                date: 'August 28, 2020',\n                description: ['Initiated this development blog as well as began reviewing feedback given by my capstone advisor, Profesor Erik Kaltman.'],\n                simg: [''],\n                img: [''],\n                vid: ['']\n            },\n            {\n                title: 'Game Design & Mechanics',\n                subtitle: 'Sprint 1 : week 1',\n                date: 'August 31, 2020',\n                description: ['I reviewed my design document and sprint goals, and I decided to narrow down each section to core components. Through narrowing my scope, I will have progress as my main design philosophy and be able to complete my capstone with greater efficiency.', \n                'After narrowing the design document, I completed the sprint goals outline. I wrapped up the week by researching card game mechanics. I tested combat mechanics in my game via index cards and dice. After receiving some feedback I kept revisiting the same luck and user efficacy design difficulties. Further research will be needed in order for me to create a more cohesive user game experience.',                    \n                'I learned that for one I have to admit that the game I create will not be perfect, I am not a team of people but just a passionate individual with a love for rpgs. I need to focus on narrowing design mechanics and simplifying the process as much as possible.'],\n                img:[,\"https://i.imgur.com/ra0i3fm.jpeg\"],\n                simg:[],\n                vid:[]\n            },\n            {\n                title: 'Map Navigation',\n                subtitle: 'Sprint 1 : Week 2 ',\n                date: 'September 7, 2020',\n                description: ['I started week 2 developing the main components of the game flow starting with map navigation. I completed development of the user map navigation, as well as reached out to communicate art direction with Michael Mygen (lead artist).', \n                'Developing the map navigation I faced a few obstacles. At first I wanted procedural map navigation, similar to Slay The Spire, but found that was out of scope. So I pivoted, and after a few revisions, the current map design is centered around choosing between paths laid out in front of the user as cards. For now paths are generated based on a dice roll, with the more unique paths, such as shops, rest areas, trials and elite creeps being the rarest.',\n                'Path cards will display: path event, field type ( weather conditions ) and what lies after the event ( paths that will be presented after resolving the chosen event card ). The current map navigation is bare bones and displays card boxes with text/emoji images inside, describing what lays ahead. A map legend is displayed on the right, depicting what each emoji/symbol represents.',\n                'At the end of the week I learned that overall I need to keep scope in mind when developing each component. I don’t need to have the best procedural engine, I just need a map to generate. After the map works, then I can further develop other components and come back to refactor and upgrade at a later time.'\n                ],\n                img: [], \n                simg: [],\n                vid: [,\"https://i.imgur.com/19xmdWZ.mp4\"]\n            },\n            {\n                title: 'Bonfire, Shop, Trial & Resolution Screens',\n                subtitle: 'Sprint 2 : Week 3',\n                date: 'September 14, 2020',\n                description: ['Began sprint 2 by creating a trello board to gather my thoughts and reorganize and keep to a cohesive schedule. After pinning up my tasks on trello, I moved tasks dealing with map navigation and the overall game life cycle into the development. To Trello board: https://tinyurl.com/y4jmn5xv',\n                'First I created the bare bone screens with just text and buttons. After the functionality and the basic reducers were setup, I started altering the layout of components to be more responsive for later revisions. ',\n                ,, 'Resolution Screen:', 'Bonfire Screen:', 'Shop Screen: tbd...', 'Trial Screen:','','',''],\n                img: [],\n                simg: [\"https://i.imgur.com/QpBijAL.png\",,,,\"https://i.imgur.com/5vxclDO.gif\",\"https://i.imgur.com/R0CCSrk.gif\",\"https://i.imgur.com/twcKFCI.gif\",],\n                vid: []\n            },\n            {\n                title: 'Three Steps Backward',\n                subtitle: 'Sprint 2 : week 4',\n                date: 'September 21, 2020',\n                description: ['This week was a set back week, so nothing to report as of now.'],\n                img: [],\n                simg: [],\n                vid: []\n            },\n            {\n                title: 'Two Steps Forward',\n                subtitle: 'Sprint 3 : week 5',\n                date: 'September 28, 2020',\n                description: ['Spent this last week catching up with all of my work. Worked on developing the combat UI. Ran into a few issues revolving around how cards are displayed and used. Cards need to be legiable on both mobile and desktop enviroments. For card games on mobile devices, usualy as you drag your finger across your hand, cards in your hand are displayed larger. This enlargment of the cards allows users to better see the details of the card.',\n                'I sketched up some ideas on how to view cards in the browser, at first I tired to recreate enlarging the cards as the mouse and or touch-drag action occurs. My problem so far is with the touch-drag action, I have not been able to figure out how a this action can occur via JavaScript etc. So for now I paused this task and moved onto continueing development of the combat UI. I have still not decided on a complete layout yet, but for now this is what I have so far:',\n                'Displaying the party on the left hand side of the screen, in traditional JRPG fashion. The players status bar at the top of the screen, now reworked to display Gold, Defense & Health of the party. I simplified how health and defense is displayed. I fixed the issue of being able to click end-turn over and over.',\n                'I reworked the json data objects to include the new party battle mechanics. Currently all cards have been updated to have a party requirements to be played. Party Requirements:','Now that I have the player-data and card-data json objects updated, I need to rework how monsters and combat are done. I will be adding buffs / debuffs and hero status ailments. With these new mechanics I need to figure out how React/Redux will parse and store these conditions. These past two weeks, I learned that I need to plan more ahead of implementing a combat system, having to rework a standing code base can be messy and complicated. If I had thought of these mechanics beforehand, I could have saved myself some time and energy.',\n                ,'Current Issue: viewing cards in hand.','Hover effect (Desktop):','Hover effect (Mobile), [not working as intended]','[Side Note] The demo of the game is now in the header of blog.',''],\n                img: [,,],\n                simg: [,'https://i.imgur.com/EYJfg5z.png',,,'https://i.imgur.com/s6IjTjF.png',,,'https://i.imgur.com/UOu3jQQ.gif','https://i.imgur.com/3x6TXxF.gif'],\n                vid: []\n            }\n        ]\n    }\n    // {\n    //     title:'Web Dev Blog',\n    //     date:'../../..',\n    //     description:'comming soon ...',\n    //     blog:{\n    //         title:'Web Dev Blog',\n    //         abstract: 'info',\n    //         heroImage: \"https://i.imgur.com/Fyji2AK.jpeg\",\n    //         entry:[\n    //             {\n    //                 title: 'Initial Capstone Project',\n    //                 date: 'August 27, 2020',\n    //                 description: ['Example'],\n    //                 img: [''],\n    //             }\n    //         ]\n    //     },\n    // },\n\n]\n\n","import { createAction, handleActions } from \"redux-actions\";\nimport { useSelector } from \"react-redux\";\nimport { createSelector } from \"reselect\";\nimport { blogs } from \"../data/blogs\";\n\nexport const setBlog = createAction('blog/SET_BLOG');\n\nconst initialBlogState = blogs[0];\n\nexport default handleActions({\n    [setBlog]: (state, action) => state = action.payload,\n}, initialBlogState);\n\nconst selectBlog = createSelector(\n    state => state.blog,\n    blog => blog   \n)\n\nexport const useBlog = () => useSelector(selectBlog);\n","import React, { useState, useRef, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport style from \"./blogs.module.scss\";\nimport { setActiveNav } from '../../../ducks/nav';\n\n// import { CgArrowUpO, CgChevronDoubleUp } from \"react-icons/cg\"\nimport { blogs } from \"../../../data/blogs\"\nimport { setBlog } from \"../../../ducks/blog\";\n\n\n\nimport { Link } from 'react-router-dom';\n\nimport {\n  Navbar,\n  Card\n} from 'react-bootstrap'\n\n\nconst scrollToRef = (ref) => {\n  window.scrollTo({\n    top: ref.current.offsetTop,\n    behavior: 'smooth'\n  })\n}\n\nconst Blogs = () => {\n\n  const dispatch = useDispatch()\n\n  const topOfScreenRef = useRef(null)\n\n  console.log('blogs:', blogs[0].blog)\n\n  return (\n    <div ref={topOfScreenRef} className='blogContainer'>\n\n      <Navbar sticky=\"top\" bsPrefix='navbar' variant=\"dark\" className={style.navbar}>\n        <Navbar.Brand as={Link} to=\"/\" className={style.navLink} onClick={() => dispatch(setActiveNav('Home'))} >Adam Capdeville</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" className={style.navbarToggle} />\n      </Navbar>\n\n\n      <div className={style.blogScreenTitle} >\n        <div className={style.dotSlash}>./</div>\n        Dev Blogs\n      </div>\n\n      <div className={style.heroImageContainer}>\n        <img className={style.heroImage} src=\"https://i.imgur.com/Fyji2AK.jpeg\"/>\n      </div>\n    \n  \n      <div className={style.blogList}>\n        {blogs.map((blog, index) => (\n          <div>\n              <Link to=\"/blog\" className={style.blogLink}>\n\n                <Card key={index} className={style.blogCard} onClick={() => \n                  { \n                    scrollToRef(topOfScreenRef)\n                    dispatch(setBlog(blog.blog))\n                    dispatch(setActiveNav('Blog'))\n                  }}\n                  >\n                    \n                  <Card.Body>\n                    <Card.Title className={style.blogCardTitle}><strong>{blog.title}</strong> </Card.Title>\n                    <Card.Text> {blog.description} </Card.Text>\n                    <Card.Subtitle className={style.blogCardDate}> {blog.date} </Card.Subtitle>\n                  </Card.Body>\n\n                </Card>\n\n\n              </Link>\n            <hr/>\n          </div>\n        ))}\n\n      </div>\n\n\n\n    </div>\n  );\n};\n\nexport default Blogs;\n","import React, { useState, useRef, useEffect } from 'react'\nimport style from \"./blog.module.scss\";\n\nimport { useDispatch } from 'react-redux'\nimport { setActiveNav } from '../../../ducks/nav';\nimport { useBlog, setBlog } from '../../../ducks/blog';\nimport { blogs } from '../../../data/blogs'\n\nimport {\n    Navbar,\n    Nav,\n    Card\n} from 'react-bootstrap'\n\nimport { Link } from 'react-router-dom';\n\n\nconst Blog = () => {\n    const dispatch = useDispatch();\n    const blog = useBlog();\n\n    return(\n        <div>\n            <Navbar sticky=\"top\" bsPrefix='navbar' variant=\"dark\" className={style.navbar}>\n                <Navbar.Brand as={Link} to=\"/\" className={style.navLink} onClick={() => dispatch(setActiveNav('Home'))} >Adam Capdeville</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" className={style.navbarToggle} />\n                <Nav.Link eventKey=\"1\" href={blog.link} className={style.navLink} target=\"_blank\" >DEMO</Nav.Link>\n            </Navbar>\n\n            <div className={style.blogScreenTitle} >\n                {blog.title}\n            </div>\n\n            <div className={style.heroImageContainer}>\n                <img className={style.heroImage} src={blog.heroImage} />\n            </div>\n\n            <div className={style.tryItContainer}>\n                try it\n            </div>\n\n            <div className={style.blogContainer}>\n\n                <Card className={style.abstractContainer}>\n                    <div className={style.abstract}>\n                        <h4><strong>Abstract</strong></h4>\n                        <p className={style.abstractText}>{blog.abstract}</p>\n                    </div>\n                </Card>\n                \n                {blog.entry.map( (e, index) => (\n                    <Card className={style.entry} key={index}>\n                        <h4>\n                            <strong>\n                                {e.title}\n                            </strong>\n                        </h4>\n                        <h5>\n                            <strong>\n                                {e.subtitle}\n                            </strong>\n                        </h5>\n                        <Card.Subtitle>{e.date}</Card.Subtitle>\n\n                        {e.description.map( (d, i) => (\n                            <>\n                            \n                                <Card.Body className={style.entryText} key={i}> \n                                    {d} \n                                </Card.Body>\n\n                                {e.img[i] && (\n                                    <Card.Body className={style.entryImageContainer} > \n                                        <img className={style.entryImage} src={e.img[i]}/> \n                                    </Card.Body>\n                                    )\n                                }\n\n                                {e.simg[i] && (\n                                    <Card.Body className={style.entrySmallImageContainer} > \n                                        <img className={style.entrySmallImage} src={e.simg[i]}/> \n                                    </Card.Body>\n                                    )\n                                }\n\n                                {e.vid[i] && \n                                    (<Card.Body>\n                                        <div className={style.entryVideoContainer}>\n                                            <video className={style.entryVideo} controls>\n                                                <source src={e.vid[i]} type=\"video/mp4\"/>\n                                            </video>                                \n                                        </div> \n                                    </Card.Body>)\n                                }\n                            </>\n                        ))}\n                    </Card>\n                ))}\n                <br/>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Blog;\n","import React from 'react';\n\n// import {Route} from 'react-router';\nimport { useDispatch } from 'react-redux'\n\n\nimport Home from './components/screens/landing';\nimport Blogs from './components/screens/blogs';\nimport Blog from './components/screens/blog';\n\nimport { useNav, setActiveNav } from './ducks/nav';\n\nimport {Switch, Route, NavLink, Redirect} from \"react-router-dom\";\n\n\nfunction App() {\n  return (\n    <div>\n      <Switch>\n        <Route path={\"/\"} exact component={Home} />\n        <Route path={\"/blogs\"} exact component={Blogs} />\n        <Route path={\"/blog\"} exact component={Blog} />\n        <Redirect to={\"/\"} />\n      </Switch>\n    </div>\n  );\n}\n\n\n\n// const sections = {\n//   Home,\n//   Blogs,\n//   Blog\n// }\n\n\n// const App = () => {\n//   const navigation = useNav();\n\n//   var pathArray = window.location.pathname.split('/');\n//   console.log('path:', pathArray[1])\n\n//   const dispatch = useDispatch();\n\n//   if ( pathArray[1] === 'blog' ){\n//     dispatch(setActiveNav('Blog')) \n//    }\n\n//   const Navivation = sections[navigation];\n//   return <Navivation />\n// }\n\nexport default App;","import { combineReducers } from 'redux'\nimport nav from './nav'\nimport blog from './blog'\n\n\nexport default combineReducers({\n    nav,\n    blog\n})","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nimport { Provider } from 'react-redux'\nimport configureStore from './configurestore'\nimport {BrowserRouter} from \"react-router-dom\";\n\nconst rootElement = document.getElementById('root');\nconst store = configureStore();\n\nReactDOM.render(\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>,\n    rootElement\n);\n","import { applyMiddleware, createStore } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport rootReducer from './ducks/'\n\nexport default function configureStore(preloadedState) {\n  const middlewares = [thunkMiddleware];\n  const middlewareEnhancer = applyMiddleware(...middlewares)\n\n  const enhancers = [middlewareEnhancer];\n  const composedEnhancers = composeWithDevTools(...enhancers)\n\n  const store = createStore(rootReducer, preloadedState, composedEnhancers)\n\n  return store;\n}\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reposContainer\":\"github_reposContainer__3CZ3b\",\"repoCard\":\"github_repoCard__KWnNU\",\"repoTitle\":\"github_repoTitle__2NUck\",\"repoImage\":\"github_repoImage__3tsC9\",\"repoText\":\"github_repoText__1x6sf\",\"languageIconContainer\":\"github_languageIconContainer__3tZZg\",\"languageIcon\":\"github_languageIcon__3MksM\",\"languageIconDefault\":\"github_languageIconDefault__3oln3\",\"repoLink\":\"github_repoLink__1t6lg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blogContainer\":\"blogs_blogContainer__3eFMg\",\"heroImageContainer\":\"blogs_heroImageContainer__1i-DC\",\"heroImage\":\"blogs_heroImage__2qOjw\",\"blogList\":\"blogs_blogList__2T5qK\",\"blogCard\":\"blogs_blogCard__2Yx6r\",\"blogCardTitle\":\"blogs_blogCardTitle__3wecv\",\"blogCardDate\":\"blogs_blogCardDate___7d5j\",\"blogScreenTitle\":\"blogs_blogScreenTitle___lWTV\",\"dotSlash\":\"blogs_dotSlash__2elid\",\"moduleBody\":\"blogs_moduleBody__3Lmt9\",\"item\":\"blogs_item__OGo43\",\"title\":\"blogs_title__1ScYM\",\"moduleSkill\":\"blogs_moduleSkill__CXfLL\",\"navbar\":\"blogs_navbar__3qRB-\",\"navbarColapse\":\"blogs_navbarColapse__1Ojcr\",\"navbarToggle\":\"blogs_navbarToggle__2qXiZ\",\"navLink\":\"blogs_navLink__3WS3O\",\"blogLink\":\"blogs_blogLink__38hcV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"currentRepo_container__2W7J2\",\"repoRow\":\"currentRepo_repoRow__chAUy\",\"repo\":\"currentRepo_repo__Qdsaf\",\"repoLink\":\"currentRepo_repoLink__1R4Jn\",\"dateRow\":\"currentRepo_dateRow__1rA_f\",\"dateText\":\"currentRepo_dateText__Hg-Vu\",\"blinkyGreen\":\"currentRepo_blinkyGreen__fxHYd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"landing_logo__1hgZC\",\"navbar\":\"landing_navbar__38D3X\",\"navbarColapse\":\"landing_navbarColapse__2zzHI\",\"navbarToggle\":\"landing_navbarToggle__29xe1\",\"navLink\":\"landing_navLink__1irxL\",\"landingTitle\":\"landing_landingTitle__14ep1\",\"continueButton\":\"landing_continueButton__1O3mO\",\"screenContainer\":\"landing_screenContainer__YH4GW\",\"aboutSection\":\"landing_aboutSection__3Ygnq\",\"workSection\":\"landing_workSection__2MPP0\",\"influentialSection\":\"landing_influentialSection__2if8v\",\"contactSection\":\"landing_contactSection__kLPwn\",\"contactIconContainer\":\"landing_contactIconContainer__3TpJn\",\"contactIcon\":\"landing_contactIcon__2fIzH\",\"icon\":\"landing_icon__2OrBQ\",\"sectionTitle\":\"landing_sectionTitle__13Ygi\",\"centerText\":\"landing_centerText__W2BA5\",\"profileImage\":\"landing_profileImage__1ZIUs\",\"body\":\"landing_body__154mB\",\"name\":\"landing_name__3JbT_\",\"listTitle\":\"landing_listTitle__3IcPJ\",\"listContainer\":\"landing_listContainer__KmUWj\",\"list\":\"landing_list__2fie3\",\"about\":\"landing_about__m3-bO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"footer_container__3Mbmx\",\"link\":\"footer_link__rNuqK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"systemSection\":\"systemSection_systemSection__1k8uW\",\"mySystemText\":\"systemSection_mySystemText__3Hj1o\",\"darumaQuote\":\"systemSection_darumaQuote__2cFCg\",\"darumaQuoteText\":\"systemSection_darumaQuoteText__1V5KR\",\"leftQuote\":\"systemSection_leftQuote__1XFZo\",\"rightQuote\":\"systemSection_rightQuote__iZCHJ\",\"darumaQuoteEnd\":\"systemSection_darumaQuoteEnd__39sT7\",\"daruma_container\":\"systemSection_daruma_container__1pcPS\",\"daruma\":\"systemSection_daruma__3_XOo\",\"daruma_shadow_container\":\"systemSection_daruma_shadow_container__2BUof\",\"daruma_shadow\":\"systemSection_daruma_shadow__3Dm7c\",\"shadow\":\"systemSection_shadow__1APys\",\"daruma_shadow_m\":\"systemSection_daruma_shadow_m__321UN\",\"shadow_m\":\"systemSection_shadow_m__wAb10\",\"darumaToggleInfoOuterContainer\":\"systemSection_darumaToggleInfoOuterContainer__26ahs\",\"darumaToggleInfoContainer\":\"systemSection_darumaToggleInfoContainer__wuFGX\",\"darumaToggleInfo\":\"systemSection_darumaToggleInfo__1q2BQ\",\"darumaToggleButtonsContainer\":\"systemSection_darumaToggleButtonsContainer__KTMQa\",\"darumaToggleButton\":\"systemSection_darumaToggleButton__5xhLN\",\"aboutDaruma\":\"systemSection_aboutDaruma__1upuK\"};","module.exports = __webpack_public_path__ + \"static/media/daruma.a0dade87.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blogScreenTitle\":\"blog_blogScreenTitle__3aUJD\",\"blogContainer\":\"blog_blogContainer__2ImoJ\",\"abstractContainer\":\"blog_abstractContainer__1yOdD\",\"abstract\":\"blog_abstract__D5SVZ\",\"abstractText\":\"blog_abstractText__2FCM4\",\"entry\":\"blog_entry__UZKN7\",\"entryText\":\"blog_entryText__sefnT\",\"entryImageContainer\":\"blog_entryImageContainer__19eLV\",\"entryImage\":\"blog_entryImage__3fHFd\",\"entrySmallImageContainer\":\"blog_entrySmallImageContainer__25mAv\",\"entrySmallImage\":\"blog_entrySmallImage__BrcSY\",\"entryVideoContainer\":\"blog_entryVideoContainer__3k7oi\",\"entryVideo\":\"blog_entryVideo__J0i6g\",\"heroImageContainer\":\"blog_heroImageContainer__1RaDP\",\"heroImage\":\"blog_heroImage__2AHV1\",\"navbar\":\"blog_navbar__XhPmb\",\"navLink\":\"blog_navLink__23cHO\"};"],"sourceRoot":""}